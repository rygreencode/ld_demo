import { DataSourceState } from './DataSource';
/**
 * Handler that connects the current {@link DataSource} to the {@link CompositeDataSource}.  A single
 * {@link CallbackHandler} should only be given to one {@link DataSource}.  Use {@link disable()} to
 * prevent additional callback events.
 */
export declare class CallbackHandler {
    private readonly _dataCallback;
    private readonly _statusCallback;
    private _disabled;
    constructor(_dataCallback: (basis: boolean, data: any) => void, _statusCallback: (status: DataSourceState, err?: any) => void);
    disable(): void;
    dataHandler(basis: boolean, data: any): Promise<void>;
    statusHandler(status: DataSourceState, err?: any): Promise<void>;
}
//# sourceMappingURL=CallbackHandler.d.ts.map